pipeline {
    agent any

    environment {
        DOCKERHUB_CREDS=credentials("borisshapa-dockerhub")
        GITHUB_ACCESS_TOKEN=credentials("borisshapa-docker-access-token")
        ANSIBLE_PWD=credentials("ansible-pwd")
        MSSQL_SERVER=credentials("mssql-server")
        MSSQL_UID=credentials("mssql-uid")
        MSSQL_PWD=credentials("mssql-pwd")
        MSSQL_DATABASE=credentials("mssql-database")
        LC_ALL = "en_US.UTF-8"
        LANG = "en_US.UTF-8"
        LANGUAGE = "en_US.UTF-8"
    }

    options {
        timestamps()
        skipDefaultCheckout(true)
    }

    stages {
        stage("Clone github repository") {
            steps {
                cleanWs()
                sh "git clone -b ${GIT_BRANCH='master'} https://github.com/borisshapa/wine-quality-secrets"
            }
        }
        stage("Login") {
            steps {
                sh "docker login -u $DOCKERHUB_CREDS_USR -p $DOCKERHUB_CREDS_PSW"
            }
        }
        stage("Build and run docker container") {
            steps {
                dir("wine-quality-secrets") {
                    script{
                        try {
                            sh "docker compose build --build-arg ANSIBLE_PWD=${ANSIBLE_PWD} --build-arg MSSQL_SERVER=${MSSQL_SERVER} --build-arg MSSQL_UID=${MSSQL_UID} --build-arg MSSQL_PWD=${MSSQL_PWD} --build-arg MSSQL_DATABASE=${MSSQL_DATABASE}"
                        } finally {
                            sh "docker compose up -d"
                        }
                    }
                }
            }
        }
        stage("Checkout coverage report") {
            steps {
                dir("wine-quality-secrets") {
                    script {
                        sh "docker compose logs -t --tail 10 web"
                        try {
                            timeout(10) {
                                sh "docker compose up -d"
                                waitUntil {
                                    "exited" == sh(returnStdout: true,
                                    script: "docker inspect wine-quality-secrets-web-1 --format=\"{{ .State.Status }}\"").trim()
                                }
                            }
                        } finally {
                            sh "docker compose logs -t --tail 10"
                        }
                    }
                }
            }
        }
        stage("Push") {
            steps {
                sh "docker push borisshapa/wine-quality:latest"
            }
        }
    }
    post {
        always {
            sh "docker logout"
        }
    }
}